version: '3.8'
services:
  # Proxy server
  nginx:
    container_name: webserver-nginx
    image: nginx:1.13
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - web-server-app
    networks:
      - docproj-network #web-server_network

  # Web server
  web-server-app:
    container_name: web-server-container
    build: .
    working_dir: /web-server
    volumes:
      - dbvol:/web-server
    expose:
      - 8080
    networks:
      - docproj-network #web-server_network
    depends_on:
      - recorddb

  # Web server/Record DB
  recorddb:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - volrecdb:/var/lib/postgresql/data
    #      - ./db/record-init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - docproj-network

  # Log server
  log_server:
    build: ./log_server
    container_name: log_server_container
    ports:
      - 8001:8001
    networks:
      - docproj-network
    depends_on:
      - logserverdb

  # Log DB
  logserverdb:
    build: ./log_db
    restart: always
    hostname: logdb
    container_name: log_database_container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5433:5432
    volumes:
      - vollogdb:/var/lib/postgresql/data
      - ./log_db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - docproj-network

volumes:
  volrecdb:
    driver: local
  vollogdb:
    driver: local

networks:
  docproj-network:
    driver: bridge
